name: SFCC Build Test and Deploy

on:
  workflow_call:
    inputs:
      branch:
        required: true
        type: string
      path:
        required: true
        type: string
      hostname:
        required: true
        type: string
      client_id:
        required: true
        type: string
      activate_code_version:
        required: true
        type: string
    secrets:
      pat_token:
        required: true
      client_secret:
        required: true

jobs:
  
  Build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.21.0]

    steps:

      - name: Checkout eg_sfcc
        uses: actions/checkout@v3
        with:
          repository: ShopEmpowerGlobal/eg_sfcc
          ref: ${{ inputs.branch }}
          token: ${{ secrets.pat_token }}
          path: ${{ inputs.path }}

      # - name: Set up Node.js ${{ matrix.node-version }}
      #   uses: actions/setup-node@v3
      #   with:
      #     node-version: ${{ matrix.node-version }}

      # - name: Install Dependencies
      #   run: npm install
      #   working-directory: ${{ inputs.path }}

      - name: Automatic Tagging of Releases
        id: increment-git-tag
        run: |
          bash .github/workflows/scripts/version.sh --major
        working-directory: ${{ inputs.path }}

      - name: 'Check env file'
        env:
        run: echo $NEWTAG

      # - name: 'Create env file'
      #   env:
      #     GIT_TAG: ${{ steps.increment-git-tag.outputs.git-tag }}
      #   run: |
      #     touch .env
      #     echo HOSTNAME=${{ inputs.hostname }} >> .env
      #     echo CLIENT_ID=${{ inputs.client_id }} >> .env
      #     echo VERSION=$GIT_TAG >> .env
      #     echo CLIENT_SECRET='${{ secrets.client_secret }}' >> .env
      #     echo ACTIVATE_CODE_VERSION=${{ inputs.activate_code_version }} >> .env
      #     echo 
      #     cat .env
      #   working-directory: ${{ inputs.path }}

      # - name: Build
      #   run: npm run build
      #   working-directory: ${{ inputs.path }}

      # - name: Deploy
      #   run: npm run deploy
      #   working-directory: ${{ inputs.path }}